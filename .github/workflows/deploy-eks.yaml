name: Deploy EKS

on:
  workflow_dispatch:
    inputs:
      name:
        description: "EKS cluster name"
        required: true
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options: [dev, staging, prod]
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options: [deploy, destroy, unlock-only]
      force-unlock:
        description: 'Force unlock stuck state before operation'
        required: false
        default: false
        type: boolean

env:
  TF_VERSION: 1.9.0
  KUBECTL_VERSION: 1.28.0

concurrency:
  group: eks-${{ github.event.inputs.environment }}-${{ github.event.inputs.name }}
  cancel-in-progress: false

jobs:
  eks:
    name: ${{ github.event.inputs.action == 'destroy' && '🗑️ Destroy' || github.event.inputs.action == 'unlock-only' && '🔓 Unlock' || '🚀 Deploy' }} EKS
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Validate Inputs
        if: ${{ github.event.inputs.action != 'unlock-only' }}
        run: |
          if [[ ! "${{ github.event.inputs.name }}" =~ ^[a-zA-Z][a-zA-Z0-9-]*[a-zA-Z0-9]$ ]]; then
            echo "❌ Invalid cluster name"
            exit 1
          fi

      - name: Handle Lock
        uses: ./.github/actions/terraform-lock-handler
        with:
          action: ${{ github.event.inputs.action }}
          state-key: cluster-eks-jarybski/eks/${{ github.event.inputs.environment }}/${{ github.event.inputs.name }}/terraform.tfstate
          bucket: ${{ vars.TF_STATE_BUCKET }}
          table: ${{ vars.TF_STATE_LOCK_TABLE }}
          region: ${{ vars.AWS_REGION }}
          force-unlock: ${{ github.event.inputs.force-unlock }}

      - name: Exit if Unlock Only
        if: ${{ github.event.inputs.action == 'unlock-only' }}
        run: echo "🔓 Unlock-only mode completed. Exiting..."

      - name: Run Terraform
        if: ${{ github.event.inputs.action != 'unlock-only' }}
        uses: ./.github/actions/terraform-runner
        with:
          action: ${{ github.event.inputs.action }}
          cluster_name: ${{ github.event.inputs.name }}
          environment: ${{ github.event.inputs.environment }}
          terraform_version: ${{ env.TF_VERSION }}
          backend_bucket: ${{ vars.TF_STATE_BUCKET }}
          backend_key: cluster-eks-jarybski/eks/${{ github.event.inputs.environment }}/${{ github.event.inputs.name }}/terraform.tfstate
          backend_region: ${{ vars.AWS_REGION }}
          backend_table: ${{ vars.TF_STATE_LOCK_TABLE }}


      - name: Install Argo CD and Sync GitOps Apps
        if: ${{ github.event.inputs.action == 'deploy' && success() }}
        uses: ./.github/actions/install-argocd
        with:
          cluster_name: ${{ github.event.inputs.name }}
          region: ${{ vars.AWS_REGION }}
          apps_path: ./argo-apps/${{ github.event.inputs.environment }}


      - name: Generate Connect Script
        if: ${{ github.event.inputs.action == 'deploy' }}
        run: |
          cat > connect.sh <<EOF
          #!/bin/bash
          aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name ${{ github.event.inputs.name }}
          kubectl cluster-info
          EOF
          chmod +x connect.sh

      - name: Upload Connect Script
        if: ${{ github.event.inputs.action == 'deploy' }}
        uses: actions/upload-artifact@v4
        with:
          name: eks-connection-${{ github.event.inputs.name }}
          path: connect.sh
          retention-days: 7

      - name: Summary
        if: always()
        run: |
          echo "# Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Action: ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cluster: ${{ github.event.inputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  cleanup-on-cancel:
    name: 🧹 Cleanup on Cancel
    if: cancelled()
    needs: eks
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Force Unlock
        uses: ./.github/actions/terraform-lock-handler
        with:
          action: force-unlock
          state-key: cluster-eks-jarybski/eks/${{ github.event.inputs.environment }}/${{ github.event.inputs.name }}/terraform.tfstate
          bucket: ${{ vars.TF_STATE_BUCKET }}
          table: ${{ vars.TF_STATE_LOCK_TABLE }}
          region: ${{ vars.AWS_REGION }}
